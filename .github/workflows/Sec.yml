name: Sec

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.PASS }}" | docker login -u "${{ secrets.USER }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.USER }}/devsecops:2.0 .
          docker push ${{ secrets.USER }}/devsecops:2.0

  sast_test:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install HTMLHint
        run: npm install -g htmlhint

      - name: Run HTMLHint security scan
        run: htmlhint --format json > htmlhint-output.json || true  # Ignore failures to prevent pipeline from failing

      - name: Archive HTMLHint output
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: htmlhint_output
          path: htmlhint-output.json

  deploy:
    runs-on: ubuntu-latest
    needs: [sast_test]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Deploy to Production
        run: |
          docker pull ${{ secrets.USER }}/devsecops:2.0
          docker stop devsecops || true  # Stop the container if it's already running
          docker run -d --name devsecops -p 80:80 ${{ secrets.USER }}/devsecops:2.0

  notify_discord:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD }}
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"content": "Pipeline conclu√≠da com sucesso!"}' ${{ secrets.DISCORD }}
